---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Sign Up - Astro Editor">
  <div class="container">
    <div class="auth-form">
      <h1>Create Account</h1>
      <form id="signup-form" autocomplete="off" aria-label="Sign up form">
        <div class="form-group">
          <label for="username">Name</label>
          <input type="text" id="name" name="name" placeholder="Enter your name" required />
        </div>
        
        <div class="form-group">
          <label for="email">Email</label>
          <input type="email" id="email" name="email" placeholder="Enter email" required />
        </div>
        
        <div class="form-group">
          <label for="password">Password</label>
          <div style="position:relative;">
            <input type="password" id="password" name="password" placeholder="Enter password" required aria-required="true" />
            <button type="button" id="toggle-password" aria-label="Show password" tabindex="-1" style="position:absolute;right:10px;top:50%;transform:translateY(-50%);background:none;border:none;cursor:pointer;">üëÅÔ∏è</button>
          </div>
        </div>
        
        <div class="form-group">
          <label for="confirmPassword">Confirm Password</label>
          <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm password" required aria-required="true" />
        </div>

        <div class="form-group">
          <select id="role" name="role" required style="display: none;">
            <option value="user">User</option>
          </select>
        </div>
        
        <div id="error-message" class="error-message" role="alert"></div>
        <div id="success-message" class="success-message" role="status"></div>
        <button type="submit" class="btn-submit" id="signup-btn">
          <span id="signup-btn-text">Create Account</span>
          <span id="signup-spinner" style="display:none;">‚è≥</span>
        </button>
      </form>
      
      <div class="auth-footer">
        Already have an account? <a href="/login">Log In</a>
      </div>
    </div>
  </div>
</Layout>

<script>
document.getElementById('signup-form')?.addEventListener('submit', async (e) => {
  e.preventDefault();

  const name = (document.getElementById('name') as HTMLInputElement | null)?.value.trim() || '';
  const email = (document.getElementById('email') as HTMLInputElement | null)?.value.trim() || '';
  const password = (document.getElementById('password') as HTMLInputElement | null)?.value || '';
  const confirmPassword = (document.getElementById('confirmPassword') as HTMLInputElement | null)?.value || '';
  const errorElement = document.getElementById('error-message');
  const successElement = document.getElementById('success-message');
  const signupBtn = document.getElementById('signup-btn') as HTMLButtonElement | null;
  const signupBtnText = document.getElementById('signup-btn-text');
  const signupSpinner = document.getElementById('signup-spinner');

  if (!errorElement || !signupBtn || !signupBtnText || !signupSpinner || !successElement) return;

  errorElement.textContent = '';
  successElement.textContent = '';

  if (!name) {
    errorElement.textContent = 'Name is required';
    return;
  }
  if (!email) {
    errorElement.textContent = 'Email is required';
    return;
  }
  if (!password) {
    errorElement.textContent = 'Password is required';
    return;
  }
  if (password !== confirmPassword) {
    errorElement.textContent = 'Passwords do not match';
    return;
  }

  signupBtn.disabled = true;
  signupBtnText.style.display = 'none';
  signupSpinner.style.display = 'inline-block';

  try {
    const response = await fetch('/api/signup', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ name, email, password, role: 'user' }) // Always user
    });

    const data = await response.json();

    if (!response.ok) {
      throw new Error(data.error || 'Registration failed');
    }

    successElement.textContent = 'Registration successful! Redirecting to login...';
    (e.target as HTMLFormElement).reset();
    setTimeout(() => {
      window.location.href = '/login?registered=true';
    }, 1200);

  } catch (error) {
    let message = 'Registration failed';
    if (error && typeof error === 'object' && 'message' in error) {
      message = (error as { message: string }).message;
    }
    errorElement.textContent = message;
  } finally {
    signupBtn.disabled = false;
    signupBtnText.style.display = 'inline';
    signupSpinner.style.display = 'none';
  }
});

// Password visibility toggle
document.getElementById('toggle-password')?.addEventListener('click', () => {
  const pwd = document.getElementById('password') as HTMLInputElement | null;
  if (pwd) {
    pwd.type = pwd.type === 'password' ? 'text' : 'password';
  }
});
</script>

<style>
  .container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - var(--navbar-height));
    padding: 1rem;
  }
  
  .auth-form {
    background-color: var(--secondary-bg);
    border-radius: 8px;
    padding: 2rem;
    width: 100%;
    max-width: 450px;
    box-shadow: 0 4px 10px var(--shadow-color);
  }
  
  h1 {
    color: var(--text-color);
    margin-bottom: 1.5rem;
    text-align: center;
    font-size: 1.8rem;
  }
  
  .form-group {
    margin-bottom: 1.2rem;
  }
  
  label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-color);
    font-size: 0.9rem;
  }
  
  input, select {
    width: 100%;
    padding: 10px;
    border-radius: 4px;
    border: 1px solid var(--border-color);
    background-color: var(--primary-bg);
    color: var(--text-color);
    font-size: 1rem;
    transition: border-color 0.2s ease;
  }
  
  input:focus, select:focus {
    border-color: var(--accent-color);
    outline: none;
    box-shadow: 0 0 0 2px rgba(79, 158, 250, 0.2);
  }
  
  .error-message {
    color: #ff5555;
    font-size: 0.9rem;
    margin-bottom: 1rem;
    min-height: 1rem;
    text-align: center;
  }
  
  .success-message {
    color: #4caf50;
    font-size: 0.95rem;
    margin-bottom: 1rem;
    min-height: 1rem;
    text-align: center;
  }
  
  .btn-submit {
    width: 100%;
    padding: 12px;
    background-color: var(--accent-color);
    color: white;
    border: none;
    border-radius: 4px;
    font-size: 1rem;
    font-weight: 500;
    margin-top: 0.5rem;
    cursor: pointer;
    transition: all 0.2s ease;
  }
  
  .btn-submit:hover:not(:disabled) {
    background-color: var(--accent-hover);
    transform: translateY(-2px);
  }
  
  .btn-submit:disabled {
    background-color: var(--text-muted);
    cursor: not-allowed;
  }
  
  .auth-footer {
    margin-top: 1.5rem;
    text-align: center;
    color: var(--text-muted);
    font-size: 0.9rem;
  }
  
  .auth-footer a {
    color: var(--accent-color);
    text-decoration: none;
    font-weight: 500;
  }
  
  .auth-footer a:hover {
    text-decoration: underline;
  }
</style>